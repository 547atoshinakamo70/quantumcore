version: '{build}'
image: Visual Studio 2022
test: off

# === Environment (set secrets in AppVeyor UI; do NOT hardcode real keys) ===
environment:
  NODE_VERSION: 20
  # Vite frontend env (injected at build)
  VITE_ETH_RPC: 
    secure: REPLACE_IN_APPVEYOR_UI
  VITE_POLYGON_RPC:
    secure: REPLACE_IN_APPVEYOR_UI
  VITE_BNB_RPC:
    secure: REPLACE_IN_APPVEYOR_UI
  VITE_COSMOS_RPC:
    secure: REPLACE_IN_APPVEYOR_UI
  VITE_COSMOS_DENOM:
    secure: REPLACE_IN_APPVEYOR_UI
  VITE_BTC_API:
    secure: REPLACE_IN_APPVEYOR_UI
  VITE_DAG_NODE:
    secure: REPLACE_IN_APPVEYOR_UI

init:
  - ps: |
      $ProgressPreference = "SilentlyContinue"
      Write-Host "Repo root:" (Get-Location)

install:
  - ps: |
      Set-StrictMode -Version Latest
      $ErrorActionPreference = "Stop"
      Install-Product node $env:NODE_VERSION
      node -v
      npm -v

      # 1) Build web (React + Vite)
      Push-Location web
      if (Test-Path "package-lock.json") { cmd /c "npm ci --no-fund --no-audit" } else { cmd /c "npm install --no-fund --no-audit" }
      cmd /c "npm run build"
      Pop-Location

      # 2) Prepare Electron (desktop)
      Push-Location desktop
      if (Test-Path "package-lock.json") { cmd /c "npm ci --no-fund --no-audit" } else { cmd /c "npm install --no-fund --no-audit" }
      Pop-Location

build_script:
  - ps: |
      # Copy web/dist into desktop/app
      if (Test-Path 'desktop\app') { Remove-Item -Recurse -Force 'desktop\app' }
      New-Item -ItemType Directory -Force -Path 'desktop\app' | Out-Null
      robocopy web\dist desktop\app /E | Out-Host

      # Pack Windows installer
      Push-Location desktop
      cmd /c "npm run pack:win"
      Pop-Location

artifacts:
  - path: desktop\release\*.exe
    name: QuantumCore-Setup

# --- Optional Linux build (uncomment to add Ubuntu job) ---
# for:
#   -
#     matrix:
#       only:
#         - image: Ubuntu2204
#     install:
#       - sh: |
#           set -e
#           cd web && npm ci && npm run build && cd ..
#           cd desktop && npm ci && cd ..
#     build_script:
#       - sh: |
#           set -e
#           rm -rf desktop/app && mkdir -p desktop/app
#           cp -r web/dist/* desktop/app/
#           cd desktop && npx --yes electron-builder --linux AppImage
#     artifacts:
#       - path: desktop/release/*.AppImage
#         name: QuantumCore-AppImage
